<tree schema_version="1.0">
    <sourceName>-</sourceName>
    <sourceGroup>-</sourceGroup>
    <definitionId>routine_create_or_update_calendar_events_loop</definitionId>
    <type>Global Routine</type>
    <status>Active</status>
    <taskTree builder_version="" schema_version="1.0" version="">
        <name>Create or Update Calendar Events Loop</name>
        <author></author>
        <notes></notes>
        <lastID>22</lastID>
        <taskDefinition id="routine_create_or_update_calendar_events_loop" name="Create or Update Calendar Events Loop" schema_version="1.0" version="1">
            <visible>false</visible>
            <deferrable>true</deferrable>
            <parameters>
                <parameter id="Calendar Event JSON" label="Calendar Event JSON" required="true" tooltip=""></parameter>
            </parameters>
            <handler name="system_tree_call" version="1"></handler>
            <results format="xml"></results>
        </taskDefinition>
        <request>
            <task definition_id="system_start_v1" id="start" name="Start" x="10" y="10">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">utilities_echo_v1_12</task>
                </dependents>
            </task>
            <task definition_id="system_loop_head_v1" id="system_loop_head_v1_1" name="Calendar Events Head" x="10" y="210">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId="" dependsOnValue="" id="data_source" label="Data Source:" menu="" required="true" tooltip="The source that contains the data to use to create each task in the loop.">&lt;%= @results['Ensure Data is Array']['output'] %&gt;</parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="loop_path" label="Loop Path:" menu="" required="true" tooltip="The XPath or JSONPath statement to indicate what data records to process.">$[*]</parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="var_name" label="Variable Name:" menu="" required="false" tooltip="The local variable name used to represent the data used in loop tasks.">event</parameter>
                </parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">system_loop_tail_v1_2</task>
                    <task label="" type="Complete" value="">utilities_echo_v1_3</task>
                </dependents>
            </task>
            <task definition_id="system_loop_tail_v1" id="system_loop_tail_v1_2" name="Calendar Events Tail" x="10" y="410">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId="" dependsOnValue="" id="type" label="Type:" menu="All,Some,Any" required="true" tooltip="How many loop processes must be completed before continuing?">All</parameter>
                    <parameter dependsOnId="type" dependsOnValue="Some" id="number" label="Number:" menu="" required="false" tooltip="If some, how many?"></parameter>
                </parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">system_tree_return_v1_10</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_3" name="Flatten Calendar Event Values" x="276" y="212">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter dependsOnId="" dependsOnValue="" id="input" label="Input" menu="" required="true" tooltip="">&lt;%= 
  event = JSON.parse(@results['Calendar Events Head']['Value']) 
  # Convert 'custom_search_join' to an Array if not one.
  event['custom_search_join']= [event['custom_search_join']] unless event['custom_search_join'].kind_of?(Array)
  
  # Get dates and times
    date = event['basic']['start_date']['search_value'] 
    end_time = event['basic']['end_time']['search_value']
    start_time = event['basic']['start_time']['search_value']

  # Convert End Time
    end_date_time = DateTime.strptime(date+end_time, '%m/%d/%Y%I:%M %P') #Combine date and time
    est_end_date_time = end_date_time.to_time + (60 * 60 * 3) #Add 3 hours to convert from PST to EST
    est_end_time = est_end_date_time.strftime('%I:%M %P') # Get new time value

  # Convert Start Time
    start_date_time = DateTime.strptime(date+start_time, '%m/%d/%Y%I:%M %P') #Combine date and time
    est_start_date_time = start_date_time.to_time + (60 * 60 * 3) #Add 3 hours to convert from PST to EST
    est_start_time = est_start_date_time.strftime('%I:%M %P') # Get new time value

  # Convert Start Date
    est_start_date = est_start_date_time.strftime('%m/%d/%Y') # Get new date value

  # Convert End Date
    custevent_acs_room_booked= event['custom_search_join'].select{|v| v["customization_ref"]["@script_id"] == "custevent_acs_room_booked"}
    end_date = (!custevent_acs_room_booked.empty? ? custevent_acs_room_booked[0]['search_row_basic']['custom_field_list']['custom_field']['search_value'] : nil)
    est_end_date = Date.strptime(end_date, '%Y-%m-%d').strftime('%m/%d/%Y')
      
  # Get Location
    custevent_room_selected = event['custom_search_join'].select{|v| v["customization_ref"]["@script_id"] == "custevent_room_selected"}
    room = (!custevent_room_selected.empty? ? custevent_room_selected[0]['search_row_basic']['name']['search_value'] : nil)
    location_code = (!custevent_room_selected.empty? ? custevent_room_selected[0]['search_row_basic']['custom_field_list']['custom_field']['search_value']['@internal_id'] : nil)

  # Get Test Schedule
    custevent_acs_room_booked= event['custom_search_join'].select{|v| v["customization_ref"]["@script_id"] == "custevent_acs_room_booked"}
    schedule_id = (!custevent_acs_room_booked.empty? ? custevent_acs_room_booked[0]['search_row_basic']['internal_id']['search_value']['@internal_id'] : nil)
  # Get Room Id
    custevent_acs_room_booked= event['custom_search_join'].select{|v| v["customization_ref"]["@script_id"] == "custevent_room_selected"}
    netsuite_room_id= (!custevent_acs_room_booked.empty? ? custevent_acs_room_booked[0]['search_row_basic']['internal_id']['search_value']['@internal_id'] : nil)
      
  # Build JSON
  {
    "internal_id"=&gt; event['basic']['internal_id']['search_value']['@internal_id'],
    "title"=&gt; event['basic']['title']['search_value'],
    "startdate"=&gt; est_start_date,
    "enddate"=&gt; est_end_date,
    "starttime"=&gt; est_start_time,
    "endtime"=&gt; est_end_time,
    "custevent_room_selected"=&gt; room ,
    "testschedule_id"=&gt; schedule_id,
    "location_code"=&gt; location_code,
    "custevent_room_id"=&gt; netsuite_room_id,
    'Recurring' =&gt; "daily"
  }.to_json
%&gt;</parameter>
                </parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_kinetic_submissions_retrieve_list_v1_13</task>
                </dependents>
            </task>
            <task definition_id="routine_add_modify_calendar_event" id="routine_add_modify_calendar_event_9" name="Add Modify Calendar Event" x="273" y="411">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId="" dependsOnValue="" id="Input JSON" label="Input JSON" menu="" required="true" tooltip="">&lt;%= @results['Update Calendar Data with Location']['output'] %&gt;</parameter>
                </parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">system_loop_tail_v1_2</task>
                </dependents>
            </task>
            <task definition_id="system_tree_return_v1" id="system_tree_return_v1_10" name="Tree Return" x="10" y="610">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>false</visible>
                <parameters></parameters>
                <messages></messages>
                <dependents></dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_12" name="Ensure Data is Array" x="10" y="111">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter dependsOnId="" dependsOnValue="" id="input" label="Input" menu="" required="true" tooltip="">&lt;%= 
  data = JSON.parse(@inputs['Calendar Event JSON'])
  data = [data] unless data.kind_of?(Array)
  data.to_json
%&gt;</parameter>
                </parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">system_loop_head_v1_1</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_submissions_retrieve_list_v1" id="routine_kinetic_submissions_retrieve_list_v1_13" name="Get Location Information" x="509" y="211">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId="" dependsOnValue="" id="Kapp Slug" label="Kapp Slug" menu="" required="true" tooltip="The slug of the Kapp to find submissions in.">calendar</parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Form Slug" label="Form Slug" menu="" required="false" tooltip="The slug of the Form to find submissions in. If none provided, can only use Kapp Fields in search query">rooms</parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Form Type" label="Form Type" menu="" required="false" tooltip="The Type of Form to find submissions in."></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Core State" label="Core State" menu="" required="false" tooltip="Searches for submissions that have a core state that matches this parameter. If no value is provided, the results will contain submissions in all core states."></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Limit" label="Limit" menu="" required="false" tooltip="Limit the number of results returned. If not provided, the server will limit the results to 25 submissions. Maximum limit 1000"></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Query" label="Query" menu="" required="false" tooltip="Query to use to fetch submissions. (i.e values[First Name]=&quot;Fred&quot;)">values[Location Id NetSuite] = "8"</parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Timeline" label="Timeline" menu="" required="false" tooltip="Date property to search by. The default value is createdAt."></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Direction" label="Direction" menu="" required="false" tooltip="Result Set sorting direction. The default value is descending."></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Start Date/Time" label="Start Date/Time" menu="" required="false" tooltip="Start date/time of the timeline. This value should be used to both refine and limit the search results. Format should be yyyy-MM-dd'T'HH:mm:ss'Z'"></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="End Date/Time" label="End Date/Time" menu="" required="false" tooltip="End date/time of the timeline. This value should be used to both refine and limit the search results. Formatshould be yyyy-MM-dd'T'HH:mm:ss'Z'"></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Next Page Token" label="Next Page Token" menu="" required="false" tooltip="The value to use as the offset for the page of submissions to return. The submission that matches this value will not be included in the results."></parameter>
                </parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">utilities_echo_v1_14</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_14" name="Update Calendar Data with Location" x="509" y="411">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter dependsOnId="" dependsOnValue="" id="input" label="Input" menu="" required="true" tooltip="">&lt;%= 
  location_name = JSON.parse(@results['Get Location Information']['Submissions List JSON'])[0]['values']['Location Name']
  data = JSON.parse(@results['Flatten Calendar Event Values']['output'])
  data['custevent_location_name'] = location_name 
  data.delete("location_code")
  data.to_json
 %&gt;</parameter>
                </parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">routine_add_modify_calendar_event_9</task>
                </dependents>
            </task>
            <task definition_id="routine_kinetic_submissions_retrieve_list_v1" id="routine_kinetic_submissions_retrieve_list_v1_21" name="Get Test Schedule" x="791" y="414">
                <version>1</version>
                <configured>true</configured>
                <defers>true</defers>
                <deferrable>true</deferrable>
                <visible>false</visible>
                <parameters>
                    <parameter dependsOnId="" dependsOnValue="" id="Kapp Slug" label="Kapp Slug" menu="" required="true" tooltip="The slug of the Kapp to find submissions in.">calendar</parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Form Slug" label="Form Slug" menu="" required="false" tooltip="The slug of the Form to find submissions in. If none provided, can only use Kapp Fields in search query">schedules</parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Form Type" label="Form Type" menu="" required="false" tooltip="The Type of Form to find submissions in."></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Core State" label="Core State" menu="" required="false" tooltip="Searches for submissions that have a core state that matches this parameter. If no value is provided, the results will contain submissions in all core states."></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Limit" label="Limit" menu="" required="false" tooltip="Limit the number of results returned. If not provided, the server will limit the results to 25 submissions. Maximum limit 1000"></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Query" label="Query" menu="" required="false" tooltip="Query to use to fetch submissions. (i.e values[First Name]=&quot;Fred&quot;)">values[Schedule Id] = "&lt;%= JSON.parse(@results['Flatten Calendar Event Values']['output'])['testschedule_id'] %&gt;"</parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Timeline" label="Timeline" menu="" required="false" tooltip="Date property to search by. The default value is createdAt."></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Direction" label="Direction" menu="" required="false" tooltip="Result Set sorting direction. The default value is descending."></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Start Date/Time" label="Start Date/Time" menu="" required="false" tooltip="Start date/time of the timeline. This value should be used to both refine and limit the search results. Format should be yyyy-MM-dd'T'HH:mm:ss'Z'"></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="End Date/Time" label="End Date/Time" menu="" required="false" tooltip="End date/time of the timeline. This value should be used to both refine and limit the search results. Formatshould be yyyy-MM-dd'T'HH:mm:ss'Z'"></parameter>
                    <parameter dependsOnId="" dependsOnValue="" id="Next Page Token" label="Next Page Token" menu="" required="false" tooltip="The value to use as the offset for the page of submissions to return. The submission that matches this value will not be included in the results."></parameter>
                </parameters>
                <messages></messages>
                <dependents>
                    <task label="" type="Complete" value="">utilities_echo_v1_22</task>
                </dependents>
            </task>
            <task definition_id="utilities_echo_v1" id="utilities_echo_v1_22" name="Update Calendar Data with Title" x="1050" y="415">
                <version>1</version>
                <configured>true</configured>
                <defers>false</defers>
                <deferrable>false</deferrable>
                <visible>true</visible>
                <parameters>
                    <parameter dependsOnId="" dependsOnValue="" id="input" label="Input" menu="" required="true" tooltip="">&lt;%= 
  test_schedule = JSON.parse(@results['Get Test Schedule']['Submissions List JSON'])[0]['values']
  data = JSON.parse(@results['Update Calendar Data with Location']['output'])
  
  
  
  data['Title'] = test_schedule['Schedule Status']
  data.to_json
 %&gt;</parameter>
                </parameters>
                <messages></messages>
                <dependents></dependents>
            </task>
        </request>
    </taskTree>
</tree>